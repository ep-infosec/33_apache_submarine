<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.apache.submarine.server.database.model.mappers.ModelVersionMapper">
  <resultMap id="resultMap" type="org.apache.submarine.server.database.model.entities.ModelVersionEntity">
    <result column="model_version_id" property="modelVersionId" />
    <result column="name" property="name" />
    <result column="version" property="version" />
    <result column="id" property="id" />
    <result column="user_id" property="userId" />
    <result column="experiment_id" property="experimentId" />
    <result column="model_type" property="modelType" />
    <result column="current_stage" property="currentStage" />
    <result column="creation_time" property="creationTime" />
    <result column="last_updated_time" property="lastUpdatedTime" />
    <result column="dataset" property="dataset" />
    <result column="description" property="description" />
  </resultMap>

  <resultMap id="resultMapWithTag" type="org.apache.submarine.server.database.model.entities.ModelVersionEntity">
    <result column="model_version_id" property="modelVersionId" />
    <result column="name" property="name" />
    <result column="version" property="version" />
    <result column="id" property="id" />
    <result column="user_id" property="userId" />
    <result column="experiment_id" property="experimentId" />
    <result column="model_type" property="modelType" />
    <result column="current_stage" property="currentStage" />
    <result column="creation_time" property="creationTime" />
    <result column="last_updated_time" property="lastUpdatedTime" />
    <result column="dataset" property="dataset" />
    <result column="description" property="description" />
    <collection property="tags" column="name" ofType="java.lang.String">
      <result column="tag" property="tag" />
    </collection>
  </resultMap>

  <sql id="Base_Column_List">
    model_version_id, name, version, id, user_id, experiment_id, model_type, current_stage, creation_time,
    last_updated_time, dataset, description
  </sql>

  <select id="select" resultMap="resultMap">
    select
    <include refid="Base_Column_List" />
    from model_version
    where name = #{name} and version = #{version}
  </select>

  <select id="selectWithTag" resultMap="resultMapWithTag">
    select *
    from model_version mv
    left join model_version_tag tag on tag.name = mv.name and tag.version = mv.version
    where mv.name = #{name,jdbcType=VARCHAR} and mv.version = #{version}
  </select>

  <select id="selectAllVersions" resultMap="resultMapWithTag">
    select *
    from model_version mv
           left join model_version_tag tag on tag.name = mv.name and tag.version = mv.version
    where mv.name = #{name,jdbcType=VARCHAR}
  </select>

  <insert id="insert" parameterType="org.apache.submarine.server.database.model.entities.ModelVersionEntity" useGeneratedKeys="true" keyProperty="modelVersionId">
    insert into model_version (name, version, id, user_id, experiment_id, model_type, current_stage, creation_time, last_updated_time, dataset, description)
    values (#{name,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}, #{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR},
            #{experimentId,jdbcType=VARCHAR}, #{modelType,jdbcType=VARCHAR}, #{currentStage,jdbcType=VARCHAR},
            NOW(3), NOW(3), #{dataset,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR});
    <if test="tags != null and !tags.isEmpty()">
      insert INTO model_version_tag (name, version, tag) values
      <foreach collection="tags" item="tag" index="index" separator=",">
        (#{name},#{version},#{tag})
      </foreach>
    </if>
  </insert>

  <update id="update" parameterType="org.apache.submarine.server.database.model.entities.ModelVersionEntity">
    update model_version
    <set>
      <if test="currentStage != null">
        current_stage = #{currentStage,jdbcType=VARCHAR},
      </if>
      <if test="dataset != null">
        dataset = #{dataset,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      last_updated_time = NOW(3)
    </set>
    where name = #{name, jdbcType=VARCHAR} and version = #{version, jdbcType=INTEGER}
  </update>

  <delete id="delete">
    delete from model_version
    where name = #{name,jdbcType=VARCHAR} and version = #{version,jdbcType=INTEGER}
  </delete>

</mapper>
