<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.apache.submarine.server.database.model.mappers.RegisteredModelMapper">
  <resultMap id="RegisteredModelTagMap" type="org.apache.submarine.server.database.model.entities.RegisteredModelTagEntity">
    <result column="name" property="name" />
    <result column="tag" property="tag" />
  </resultMap>

  <resultMap id="resultMap" type="org.apache.submarine.server.database.model.entities.RegisteredModelEntity">
    <result column="model_id" property="modelId" />
    <result column="name" property="name" />
    <result column="creation_time" property="creationTime" />
    <result column="last_updated_time" property="lastUpdatedTime" />
    <result column="description" property="description" />
  </resultMap>

  <resultMap id="resultMapWithTag" type="org.apache.submarine.server.database.model.entities.RegisteredModelEntity">
    <result column="model_id" property="modelId" />
    <result column="name" property="name" />
    <result column="creation_time" property="creationTime" />
    <result column="last_updated_time" property="lastUpdatedTime" />
    <result column="description" property="description" />
    <collection property="tags" column="name" ofType="java.lang.String">
      <result column="tag" property="tag" />
    </collection>
  </resultMap>

  <sql id="Base_Column_List">
    model_id, name, creation_time, last_updated_time, description
  </sql>

  <select id="select" parameterType="java.lang.String" resultMap="resultMap">
    select
    <include refid="Base_Column_List" />
    from registered_model
    where name = #{name,jdbcType=VARCHAR}
  </select>

  <select id="selectWithTag" parameterType="java.lang.String" resultMap="resultMapWithTag">
    select *
    from registered_model rm left join registered_model_tag tag on tag.name = #{name}
    where rm.name = #{name,jdbcType=VARCHAR}
  </select>

  <select id="selectAll" resultMap="resultMapWithTag">
    select *
    from registered_model rm left join registered_model_tag tag on tag.name = rm.name
  </select>

  <insert id="insert" parameterType="org.apache.submarine.server.database.model.entities.RegisteredModelEntity" useGeneratedKeys="true" keyProperty="id">
    insert into registered_model (name, creation_time, last_updated_time, description)
    values (#{name,jdbcType=VARCHAR}, NOW(3), NOW(3), #{description,jdbcType=VARCHAR});
    <if test="tags != null and !tags.isEmpty()">
      insert INTO registered_model_tag (name, tag) values
      <foreach collection="tags" item="tag" index="index" separator=",">
        (#{name},#{tag})
      </foreach>
    </if>
  </insert>

  <update id="update" parameterType="org.apache.submarine.server.database.model.entities.RegisteredModelEntity">
    update registered_model
    <set>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      last_updated_time = NOW(3)
    </set>
    where name = #{name,jdbcType=VARCHAR}
  </update>

  <update id="rename">
    update registered_model
    <set>
      last_updated_time = NOW(3),
      name = #{newName,jdbcType=VARCHAR}
    </set>
    where name = #{name,jdbcType=VARCHAR}
  </update>

  <delete id="delete" parameterType="java.lang.String">
    delete from registered_model
    where name = #{name,jdbcType=VARCHAR};
  </delete>

  <delete id="deleteAll" parameterType="java.lang.String">
    delete from registered_model;
  </delete>

</mapper>
